{{template "base" .}}

{{define "title"}}Virtual Terminal{{end}}

{{define "content"}}
<h2 class="mt-3 text-center">Virtual Terminal</h2>
<hr />

<div id="card-messages" class="alert alert-danger text-center d-none"></div>

<form id="charge_form" action="" autocomplete="off" class="d-block needs-validation charge-form" method="POST"
	name="charge_form">
	<div class="mb-3">
		<label for="charge_amount" class="form-label">Amount</label>
		<input id="charge_amount" autocomplete="charge_amount-new" class="form-control bg-dark text-light" required
			type="text" />
	</div>
	<div class="mb-3">
		<label for="cardholder-name" class="form-label">Cardholder Name</label>
		<input id="cardholder-name" autocomplete="cardholder-name-new" class="form-control bg-dark text-light"
			name="first_name" required type="text" />
	</div>
	<div class="mb-3">
		<label for="cardholder-email" class="form-label">Cardholder Email</label>
		<input id="cardholder-email" autocomplete="cardholder-name-new" class="form-control bg-dark text-light"
			name="email" required type="email" />
	</div>
	
	<!-- Card Number Will Be Built By Stripe -->
	<div class="mb-3">
		<label for="card-element" class="form-label">Credit Card</label>
		<div id="card-element" class="form-control bg-light"></div>
		<div id="card-errors" class="alert-danger text-center" role="alert"></div>
		<div id="card-success" class="alert-success text-center" role="alert"></div>
	</div>
	<hr />

	<!-- javascript:void(0) used to execute a javascript function without opening a new tab or refresh the page -->
	<a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>
	<div id="processing-payment" class="text-center d-none">
		<div class="spinner-border text-primary" role="status">
			<span class="visually-hidden">Loading...</span>
		</div>
	</div>

	<input id="amount" type="hidden" name="amount" />
	<input id="payment_intent" type="hidden" name="payment_intent" />
	<input id="payment_method" type="hidden" name="payment_method" />
	<input id="payment_amount" type="hidden" name="payment_amount" />
	<input id="payment_currency" type="hidden" name="payment_currency" />
</form>

<div class="row">
	<div id="receipt" class="col-md-6 offset-md-3 d-none">
		<h3 class="mt-3 text-center">Receipt</h3>
		<hr />

		<p><strong>Bank Return Code</strong>: <span id="bank-return-code"></span></p>
		<p><a href="/admin/virtual-terminal" class="btn btn-primary">Charge another card</a></p>
	</div>
</div>

{{ end }}

{{define "js"}}
<script>
	checkAuth()
	document.getElementById("charge_amount").addEventListener("change", (e) => {
		if (e.target.value !== "") {
			document.getElementById("amount").value = parseInt(e.target.value * 100, 10)
		} else {
			document.getElementById("amount").value = 0
		}
	})
</script>

<script src="https://js.stripe.com/v3/"></script>

<script>
	let card
	let stripe
	const cardMessages = document.getElementById("card-messages")
	const payButton = document.getElementById("pay-button")
	const processing = document.getElementById("processing-payment")

	stripe = Stripe("{{.StripePublishableKey}}")

	function hidePayButton() {
		payButton.classList.add("d-none")
		processing.classList.remove("d-none")
	}

	function showPayButtons() {
		payButton.classList.remove("d-none")
		processing.classList.add("d-none")
	}

	function showCardError(msg) {
		cardMessages.classList.add("alert-danger")
		cardMessages.classList.remove("alert-success")
		cardMessages.classList.remove("d-none")
		cardMessages.innerText = msg
	}

	function showCardSuccess() {
		cardMessages.classList.remove("alert-danger")
		cardMessages.classList.add("alert-success")
		cardMessages.classList.remove("d-none")
		cardMessages.innerText = "Transaction Successful"
	}

	function val() {
		let form = document.getElementById("charge_form")
		if (form.checkValidity() === false) {
			this.event.preventDefault()
			this.event.stopPropagation()
			form.classList.add("was-validated")
			return
		}
		form.classList.add("was-validated")
		hidePayButton()

		let amountToCharge = document.getElementById("amount").value

		let payload = {
			amount: amountToCharge,
			currency: "usd",
		}

		const requestOptions = {
			method: "post",
			headers: {
				Accept: "application/json",
				"Content-Type": "application/json",
			},
			body: JSON.stringify(payload),
		}

		fetch("{{.API}}/api/payment-intent", requestOptions)
			.then((res) => res.text())
			.then((res) => {
				let data
				try {
					data = JSON.parse(res)
					stripe
						.confirmCardPayment(data.client_secret, {
							payment_method: {
								card,
								billing_details: {
									name: document.getElementById("cardholder-name").value,
								},
							},
						})
						.then((result) => {
							if (result.error) {
								// Card related error
								showCardError(result.error.message)
								showPayButtons()
							} else if (result.paymentIntent) {
								if (result.paymentIntent.status === "succeeded") {
									showCardSuccess()

									saveTransaction(result)
								}
							}
						})
				} catch (e) {
					console.error(e)
					showCardError("Invalid response from payment gateway!")
					showPayButtons()
				}
			})
	}

	function saveTransaction(result) {
		let payload = {
			amount: parseInt(document.getElementById("amount").value, 10),
			currency: result.paymentIntent.currency,
			first_name: "",
			last_name: "",
			email: document.getElementById("cardholder-email").value,
			payment_intent: result.paymentIntent.id,
			payment_method: result.paymentIntent.payment_method,
		}

		let token = localStorage.getItem("token")

		const requestOptions = {
			method: "POST",
			headers: {
				"Accept": "application/json",
				"Content-Type": "application/json",
				"Authorization": "Bearer " + token,
			},
			body: JSON.stringify(payload),
		}

		fetch("{{.API}}/api/admin/virtual-terminal-succeeded", requestOptions)
			.then((response) => response.json())
			.then((data) => {
				processing.classList.add("d-none")
				showCardSuccess()
				document.getElementById("bank-return-code").innerHTML = data.bank_return_code
				document.getElementById("receipt").classList.remove("d-none")
			})
	}

	; (() => {
		// create stripe & elements
		const elements = stripe.elements()
		const style = {
			base: {
				fontSize: "16px",
				lineHeight: "24px",
			},
		}

		// create card entry
		card = elements.create("card", {
			style,
			hidePostalCode: true,
		})

		card.mount("#card-element")

		// check for errors
		card.addEventListener("change", (event) => {
			var displayError = document.getElementById("card-errors")
			if (event.error) {
				displayError.classList.remove("d-none")
				displayError.textContent = event.error.message
			} else {
				displayError.classList.add("d-none")
				displayError.textContent = ""
			}
		})
	})()
</script>

{{ end }}