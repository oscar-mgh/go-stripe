{{template "base" .}}

{{define "title"}}All Sales{{end}}

{{define "content"}}
<h2 class="mt-5">All Sales</h2>
<hr />

<table id="sales-table" class="table text-light">
    <thead>
        <tr>
            <th>Transaction</th>
            <th>Customer</th>
            <th>Product</th>
            <th>Amount</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<nav style="user-select: none;">
    <ul id="paginator" class="pagination justify-content-center"></ul>
</nav>
{{end}}

{{define "js"}}
<script>
    let currentPage = 1
    let pageSize = 5

    function paginator(pages, curPage) {
        let p = document.getElementById("paginator")

        let html = `<li class="page-item"> <a href="#!" class="page-link pager" data-page="${curPage - 1}">Previous</a> </li>`

        for (let i = 0; i <= pages; i++) {
            html += `<li class="page-item"> <a href="#!" class="page-link pager" data-page="${i + 1}">${i + 1}</a> </li>`
        }

        html += `<li class="page-item"> <a href="#!" class="page-link pager" data-page="${curPage + 1}">Next</a> </li>`

        p.innerHTML = html

        let pageBtns = document.getElementsByClassName("page-item")

        if (curPage <= 1) pageBtns[0].classList.add("disabled")

        for (let j = 0; j < pageBtns.length; j++) {
            pageBtns[j].addEventListener("click", (e) => {
                let desiredPage = e.target.getAttribute("data-page")
                if ((desiredPage > 0) && (desiredPage <= pages + 1)) {
                    updateTable(pageSize, desiredPage)
                }
            })
        }
    }

    function updateTable(ps, cp) {
        let token = localStorage.getItem("token")
        let tbody = document.getElementById("sales-table").getElementsByTagName("tbody")[0]
        tbody.innerHTML = ""

        let body = {
            page_size: parseInt(ps, 10),
            page: parseInt(cp, 10),
        }

        const requestOptions = {
            method: "post",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "Authorization": "Bearer " + token,
            },
            body: JSON.stringify(body),
        }

        fetch("{{.API}}/api/admin/all-sales", requestOptions)
            .then(response => response.json())
            .then((data) => {
                if (data.orders) {
                    data.orders.forEach(i => {
                        let newRow = tbody.insertRow()
                        let newCell = newRow.insertCell()

                        newCell.innerHTML = `<a href="/admin/sales/${i.id}"> Order ${i.id} </a>`

                        newCell = newRow.insertCell()
                        newCell.innerHTML = `<span class="text-light">${i.customer.last_name + ", " + i.customer.first_name}</span>`

                        newCell = newRow.insertCell()
                        newCell.innerHTML = `<span class="text-light">${i.widget.name}</span>`

                        let cur = formatCurrency(i.transaction.amount)
                        newCell = newRow.insertCell()
                        newCell.innerHTML = `<span class="text-light">${cur}</span>`

                        newCell = newRow.insertCell()
                        if (i.status_id != 1) {
                            newCell.innerHTML = `<span class="badge bg-danger text-light">Refunded</span>`
                        } else {
                            newCell.innerHTML = `<span class="badge bg-success text-light">Charged</span>`
                        }
                    })
                    paginator(data.last_page, data.current_page)
                } else {
                    let newRow = tbody.insertRow()
                    let newCell = newRow.insertCell()

                    newCell.setAttribute("colspan", "4")
                    newCell.innerHTML = `<span class="text-warning">No data available</span>`
                }

            })
    }

    document.addEventListener("DOMContentLoaded", () => {
        updateTable(pageSize, currentPage)
    })

    function formatCurrency(amount) {
        let c = parseFloat(amount / 100)
        return c.toLocaleString("en-US", {
            style: "currency",
            currency: "USD"
        })
    }
</script>
{{end}}