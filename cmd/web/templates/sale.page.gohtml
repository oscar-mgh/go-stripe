{{template "base" .}}

{{define "title"}}{{index .StringMap "title"}}{{end}}

{{define "content"}}
<h2 class="mt-5">{{index .StringMap "title"}}</h2>
<span id="refunded" class="badge bg-danger text-light d-none">{{index .StringMap "refunded-badge"}}</span>
<span id="charged" class="badge bg-success text-light d-none">Charged</span>
<hr />

<div id="messages" class="alert text-center d-none"></div>

<div>
    <strong> Order No: </strong><span id="order-no"></span><br>
    <strong> Customer: </strong><span id="customer"></span><br>
    <strong> Product: </strong><span id="product"></span><br>
    <strong> Quantity: </strong><span id="quantity"></span><br>
    <strong> Total Sale: </strong><span id="amount"></span><br>
</div>

<hr />

<a href='{{index .StringMap "cancel"}}' class="btn btn-primary mr-5"><b>Go Back</b></a>
<a id="refund-btn" href="#!" class="btn btn-warning d-none"><b>{{index .StringMap "refund-btn"}}</b></a>

<input type="hidden" name="" id="pi" value="">
<input type="hidden" name="" id="charge-amount" value="">
<input type="hidden" name="" id="currency" value="">

{{end}}

{{define "js"}}
<script>
    let token = localStorage.getItem("token")
    let id = window.location.pathname.split("/").pop()
    let messages = document.getElementById("messages")

    function showError(msg) {
        messages.classList.add("alert-danger")
        messages.classList.remove("alert-success")
        messages.classList.remove("d-none")
        messages.innerHTML = msg
    }

    function showSuccess(msg) {
        messages.classList.add("alert-success")
        messages.classList.remove("alert-danger")
        messages.classList.remove("d-none")
        messages.innerHTML = msg
    }

    document.addEventListener("DOMContentLoaded", (event) => {

        const requestOptions = {
            method: "post",
            headers: {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "Authorization": "Bearer " + token,
            },
        }

        fetch("{{.API}}/api/admin/get-sale/" + id, requestOptions)
            .then(response => response.json())
            .then((data) => {

                if (data) {
                    document.getElementById("order-no").innerHTML = data.id
                    document.getElementById("customer").innerHTML = data.customer.first_name + " " + data.customer.last_name
                    document.getElementById("product").innerHTML = data.widget.name
                    document.getElementById("quantity").innerHTML = data.quantity
                    document.getElementById("amount").innerHTML = formatCurrency(data.transaction.amount)

                    document.getElementById("pi").value = data.transaction.payment_intent
                    document.getElementById("charge-amount").value = data.transaction.amount
                    document.getElementById("currency").value = data.transaction.currency

                    if (data.status_id === 1) {
                        document.getElementById("refund-btn").classList.remove("d-none")
                        document.getElementById("charged").classList.remove("d-none")
                    } else {
                        document.getElementById("refunded").classList.remove("d-none")
                    }
                }
            })
    })

    function formatCurrency(amount) {
        let c = parseFloat(amount / 100)
        return c.toLocaleString("en-US", {
            style: "currency",
            currency: "USD"
        })
    }

    document.getElementById("refund-btn").addEventListener("click", (e) => {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to undo this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '{{index .StringMap "refund-btn"}}'
        }).then((result) => {
            if (result.isConfirmed) {
                let payload = {
                    pi: document.getElementById("pi").value,
                    currency: document.getElementById("currency").value,
                    amount: parseInt(document.getElementById("charge-amount").value, 10),
                    id: parseInt(id, 10),
                }

                const requestOptions = {
                    method: "post",
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json",
                        "Authorization": "Bearer " + token,
                    },
                    body: JSON.stringify(payload),
                }

                fetch('{{.API}}{{index .StringMap "refund-url"}}', requestOptions)
                    .then(resp => resp.json())
                    .then((data) => {
                        if (data.error) {
                            showError(data.message)
                        } else {
                            showSuccess('{{index .StringMap "success-msg"}}')
                            document.getElementById("refund-btn").classList.add("d-none")
                            document.getElementById("refunded").classList.remove("d-none")
                            document.getElementById("charged").classList.add("d-none")
                        }
                    })
            }
        })

    })
</script>
{{end}}